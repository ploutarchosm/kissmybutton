{
  "version": 3,
  "sources": ["C:\\Users\\User\\Desktop\\kissmybutton\\node_modules\\@angular\\router\\fesm2020\\testing.mjs"],
  "sourcesContent": ["/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Location, LocationStrategy } from '@angular/common';\nimport { SpyLocation, MockLocationStrategy } from '@angular/common/testing';\nimport * as i0 from '@angular/core';\nimport { Compiler, Injector, Optional, NgModule } from '@angular/core';\nimport { Router, \u0275flatten, \u0275assignExtraOptionsToRouter, provideRoutes, ROUTER_CONFIGURATION, RouterModule, \u0275ROUTER_PROVIDERS, UrlSerializer, ChildrenOutletContexts, ROUTES, TitleStrategy, UrlHandlingStrategy, RouteReuseStrategy, \u0275withPreloading, NoPreloading } from '@angular/router';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists to easily patch the SpyNgModuleFactoryLoader into g3\nconst EXTRA_ROUTER_TESTING_PROVIDERS = [];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isUrlHandlingStrategy(opts) {\n    // This property check is needed because UrlHandlingStrategy is an interface and doesn't exist at\n    // runtime.\n    return 'shouldProcessUrl' in opts;\n}\n/**\n * Router setup factory function used for testing. Only used internally to keep the factory that's\n * marked as publicApi cleaner (i.e. not having _both_ `TitleStrategy` and `DefaultTitleStrategy`).\n */\nfunction setupTestingRouterInternal(urlSerializer, contexts, location, compiler, injector, routes, titleStrategy, opts, urlHandlingStrategy, routeReuseStrategy) {\n    return setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, titleStrategy);\n}\n/**\n * Router setup factory function used for testing.\n *\n * @publicApi\n */\nfunction setupTestingRouter(urlSerializer, contexts, location, compiler, injector, routes, opts, urlHandlingStrategy, routeReuseStrategy, titleStrategy) {\n    const router = new Router(null, urlSerializer, contexts, location, injector, compiler, \u0275flatten(routes));\n    if (opts) {\n        // Handle deprecated argument ordering.\n        if (isUrlHandlingStrategy(opts)) {\n            router.urlHandlingStrategy = opts;\n        }\n        else {\n            // Handle ExtraOptions\n            \u0275assignExtraOptionsToRouter(opts, router);\n        }\n    }\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    router.titleStrategy = titleStrategy;\n    return router;\n}\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterTestingModule.withRoutes(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n */\nclass RouterTestingModule {\n    static withRoutes(routes, config) {\n        return {\n            ngModule: RouterTestingModule,\n            providers: [\n                provideRoutes(routes),\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n            ]\n        };\n    }\n}\nRouterTestingModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: RouterTestingModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule });\nRouterTestingModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: RouterTestingModule, exports: [RouterModule] });\nRouterTestingModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: RouterTestingModule, providers: [\n        \u0275ROUTER_PROVIDERS,\n        EXTRA_ROUTER_TESTING_PROVIDERS,\n        { provide: Location, useClass: SpyLocation },\n        { provide: LocationStrategy, useClass: MockLocationStrategy },\n        {\n            provide: Router,\n            useFactory: setupTestingRouterInternal,\n            deps: [\n                UrlSerializer,\n                ChildrenOutletContexts,\n                Location,\n                Compiler,\n                Injector,\n                ROUTES,\n                TitleStrategy,\n                ROUTER_CONFIGURATION,\n                [UrlHandlingStrategy, new Optional()],\n                [RouteReuseStrategy, new Optional()],\n            ]\n        },\n        \u0275withPreloading(NoPreloading).\u0275providers,\n        provideRoutes([]),\n    ], imports: [RouterModule] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: RouterTestingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RouterModule],\n                    providers: [\n                        \u0275ROUTER_PROVIDERS,\n                        EXTRA_ROUTER_TESTING_PROVIDERS,\n                        { provide: Location, useClass: SpyLocation },\n                        { provide: LocationStrategy, useClass: MockLocationStrategy },\n                        {\n                            provide: Router,\n                            useFactory: setupTestingRouterInternal,\n                            deps: [\n                                UrlSerializer,\n                                ChildrenOutletContexts,\n                                Location,\n                                Compiler,\n                                Injector,\n                                ROUTES,\n                                TitleStrategy,\n                                ROUTER_CONFIGURATION,\n                                [UrlHandlingStrategy, new Optional()],\n                                [RouteReuseStrategy, new Optional()],\n                            ]\n                        },\n                        \u0275withPreloading(NoPreloading).\u0275providers,\n                        provideRoutes([]),\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file exists for easily patching SpyNgModuleFactoryLoader in g3\nvar spy_ng_module_factory_loader = {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RouterTestingModule, setupTestingRouter, setupTestingRouterInternal };\n//# sourceMappingURL=testing.mjs.map\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,oBAA2C;AAC3C,qBAAkD;AAClD,SAAoB;AACpB,kBAAuD;AACvD,oBAA0Q;AAV1Q;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,MAAM,iCAAiC,CAAC;AAExC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,SAAS,sBAAsB,MAAM;AAGjC,SAAO,sBAAsB;AACjC;AAKA,SAAS,2BAA2B,eAAe,UAAU,UAAU,UAAU,UAAU,QAAQ,eAAe,MAAM,qBAAqB,oBAAoB;AAC7J,SAAO,mBAAmB,eAAe,UAAU,UAAU,UAAU,UAAU,QAAQ,MAAM,qBAAqB,oBAAoB,aAAa;AACzJ;AAMA,SAAS,mBAAmB,eAAe,UAAU,UAAU,UAAU,UAAU,QAAQ,MAAM,qBAAqB,oBAAoB,eAAe;AACrJ,QAAM,SAAS,IAAI,qBAAO,MAAM,eAAe,UAAU,UAAU,UAAU,cAAU,6BAAS,MAAM,CAAC;AACvG,MAAI,MAAM;AAEN,QAAI,sBAAsB,IAAI,GAAG;AAC7B,aAAO,sBAAsB;AAAA,IACjC,OACK;AAED,0DAA4B,MAAM,MAAM;AAAA,IAC5C;AAAA,EACJ;AACA,MAAI,qBAAqB;AACrB,WAAO,sBAAsB;AAAA,EACjC;AACA,MAAI,oBAAoB;AACpB,WAAO,qBAAqB;AAAA,EAChC;AACA,SAAO,gBAAgB;AACvB,SAAO;AACX;AA0BA,MAAM,oBAAoB;AAAA,EACtB,OAAO,WAAW,QAAQ,QAAQ;AAC9B,WAAO;AAAA,MACH,UAAU;AAAA,MACV,WAAW;AAAA,YACP,6BAAc,MAAM;AAAA,QACpB,EAAE,SAAS,oCAAsB,UAAU,SAAS,SAAS,CAAC,EAAE;AAAA,MACpE;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,oBAAoB,YAAO,GAAG,6BAAmB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,qBAAqB,MAAM,CAAC,GAAG,QAAQ,GAAG,0BAAgB,SAAS,CAAC;AACpL,oBAAoB,YAAO,GAAG,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,qBAAqB,SAAS,CAAC,0BAAY,EAAE,CAAC;AAC/J,oBAAoB,YAAO,GAAG,8BAAoB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,qBAAqB,WAAW;AAAA,EACzI;AAAA,EACA;AAAA,EACA,EAAE,SAAS,wBAAU,UAAU,2BAAY;AAAA,EAC3C,EAAE,SAAS,gCAAkB,UAAU,oCAAqB;AAAA,EAC5D;AAAA,IACI,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,MAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,mCAAqB,IAAI,qBAAS,CAAC;AAAA,MACpC,CAAC,kCAAoB,IAAI,qBAAS,CAAC;AAAA,IACvC;AAAA,EACJ;AAAA,MACA,oCAAgB,0BAAY,EAAE;AAAA,MAC9B,6BAAc,CAAC,CAAC;AACpB,GAAG,SAAS,CAAC,0BAAY,EAAE,CAAC;AAChC,GAAG,mCAAyB,EAAE,YAAY,UAAU,SAAS,UAAU,UAAU,IAAI,MAAM,qBAAqB,YAAY,CAAC;AAAA,EACjH,MAAM;AAAA,EACN,MAAM,CAAC;AAAA,IACC,SAAS,CAAC,0BAAY;AAAA,IACtB,WAAW;AAAA,MACP;AAAA,MACA;AAAA,MACA,EAAE,SAAS,wBAAU,UAAU,2BAAY;AAAA,MAC3C,EAAE,SAAS,gCAAkB,UAAU,oCAAqB;AAAA,MAC5D;AAAA,QACI,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,MAAM;AAAA,UACF;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,CAAC,mCAAqB,IAAI,qBAAS,CAAC;AAAA,UACpC,CAAC,kCAAoB,IAAI,qBAAS,CAAC;AAAA,QACvC;AAAA,MACJ;AAAA,UACA,oCAAgB,0BAAY,EAAE;AAAA,UAC9B,6BAAc,CAAC,CAAC;AAAA,IACpB;AAAA,EACJ,CAAC;AACT,CAAC,EAAE,CAAC;AAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,IAAI,+BAA+B,CAAC;AAEpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
