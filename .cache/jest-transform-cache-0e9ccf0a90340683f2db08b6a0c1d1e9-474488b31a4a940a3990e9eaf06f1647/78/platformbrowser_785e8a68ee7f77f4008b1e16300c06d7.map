{
  "version": 3,
  "sources": ["C:\\Users\\User\\Desktop\\kissmybutton\\node_modules\\@angular\\platform-browser\\fesm2020\\platform-browser.mjs"],
  "sourcesContent": ["/**\n * @license Angular v14.3.0\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { \u0275DomAdapter, \u0275setRootDomAdapter, \u0275parseCookieValue, \u0275getDOM, DOCUMENT, \u0275PLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { \u0275getDOM } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, \u0275global, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, \u0275internalCreateApplication, ErrorHandler, \u0275setDocument, PLATFORM_ID, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, \u0275TESTABILITY_GETTER, \u0275TESTABILITY, Testability, NgZone, TestabilityRegistry, \u0275INJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, Optional, SkipSelf, \u0275\u0275inject, ApplicationRef, inject, \u0275Console, forwardRef, SecurityContext, \u0275allowSanitizationBypassAndThrow, \u0275unwrapSafeValue, \u0275_sanitizeUrl, \u0275_sanitizeHtml, \u0275bypassSanitizationTrustHtml, \u0275bypassSanitizationTrustStyle, \u0275bypassSanitizationTrustScript, \u0275bypassSanitizationTrustUrl, \u0275bypassSanitizationTrustResourceUrl, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends \u0275DomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        \u0275setRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return \u0275parseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = \u0275getDOM();\n            const styles = document.querySelectorAll(`style[ng-transition=\"${transitionId}\"]`);\n            for (let i = 0; i < styles.length; i++) {\n                dom.remove(styles[i]);\n            }\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        \u0275global['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        \u0275global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        \u0275global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = \u0275global['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!\u0275global['frameworkStabilizers']) {\n            \u0275global['frameworkStabilizers'] = [];\n        }\n        \u0275global['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (\u0275getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n}\nBrowserXhr.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable });\nBrowserXhr.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     * @deprecated No longer being used in Ivy code. To be removed in version 14.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nEventManager.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }]; } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = \u0275getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable });\nSharedStylesHost.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }] });\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this._hostNodes = new Map();\n        this._hostNodes.set(_doc.head, []);\n    }\n    _addStylesToHost(styles, host, styleNodes) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            styleNodes.push(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        const styleNodes = [];\n        this._addStylesToHost(this._stylesSet, hostNode, styleNodes);\n        this._hostNodes.set(hostNode, styleNodes);\n    }\n    removeHost(hostNode) {\n        const styleNodes = this._hostNodes.get(hostNode);\n        if (styleNodes) {\n            styleNodes.forEach(removeStyle);\n        }\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach((styleNodes, hostNode) => {\n            this._addStylesToHost(additions, hostNode, styleNodes);\n        });\n    }\n    ngOnDestroy() {\n        this._hostNodes.forEach(styleNodes => styleNodes.forEach(removeStyle));\n    }\n}\nDomSharedStylesHost.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nDomSharedStylesHost.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nfunction removeStyle(styleNode) {\n    \u0275getDOM().remove(styleNode);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an enum\n            // value that is not known (but previously was the value for ViewEncapsulation.Native)\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    // @ts-ignore TODO: Remove as part of FW-2290. TS complains about us dealing with an\n                    // enum value that is not known (but previously was the value for\n                    // ViewEncapsulation.Native)\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: DomSharedStylesHost }, { token: APP_ID }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nDomRendererFactory2.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2 });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }]; } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE$1 && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nDomEventsPlugin.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return \u0275getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nKeyEventsPlugin.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return \u0275internalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n * @developerPreview\n */\nfunction createApplication(options) {\n    return \u0275internalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @developerPreview\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    \u0275setDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: \u0275PLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken(NG_DEV_MODE ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: \u0275TESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: \u0275TESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, \u0275TESTABILITY_GETTER]\n    },\n    {\n        provide: Testability,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, \u0275TESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: \u0275INJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] }, {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    NG_DEV_MODE ? { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } : []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if (NG_DEV_MODE && providersAlreadyPresent) {\n            throw new Error(`Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.\u0275\u0275FactoryTarget.NgModule });\nBrowserModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] });\nBrowserModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, providers: [\n        ...BROWSER_MODULE_PROVIDERS,\n        ...TESTABILITY_PROVIDERS\n    ], imports: [CommonModule, ApplicationModule] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        ...BROWSER_MODULE_PROVIDERS,\n                        ...TESTABILITY_PROVIDERS\n                    ],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(\u0275\u0275inject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = \u0275getDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nMeta.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(\u0275\u0275inject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nTitle.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = \u0275global['ng'] = \u0275global['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * The `TransferState` is available as an injectable token.\n * On the client, just inject this token using DI and use it, it will be lazily initialized.\n * On the server it's already included if `renderApplication` function is used. Otherwise, import\n * the `ServerTransferStateModule` module to make the `TransferState` available.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Indicates whether the state is empty.\n     */\n    get isEmpty() {\n        return Object.keys(this.store).length === 0;\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable });\nTransferState.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, providedIn: 'root', useFactory: () => {\n        const doc = inject(DOCUMENT);\n        const appId = inject(APP_ID);\n        const state = new TransferState();\n        state.store = retrieveTransferredState(doc, appId);\n        return state;\n    } });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: TransferState, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useFactory: () => {\n                        const doc = inject(DOCUMENT);\n                        const appId = inject(APP_ID);\n                        const state = new TransferState();\n                        state.store = retrieveTransferredState(doc, appId);\n                        return state;\n                    }\n                }]\n        }] });\nfunction retrieveTransferredState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            // Avoid using any here as it triggers lint errors in google3 (any is not allowed).\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return initialState;\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n * @deprecated no longer needed, you can inject the `TransferState` in an app without providing\n *     this module.\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule });\nBrowserTransferStateModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule });\nBrowserTransferStateModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: BrowserTransferStateModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (\u0275getDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable });\nHammerGestureConfig.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.\u0275Console }, { token: HAMMER_LOADER, optional: true }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nHammerGesturesPlugin.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.\u0275Console }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }]; } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, deps: [], target: i0.\u0275\u0275FactoryTarget.NgModule });\nHammerModule.\u0275mod = i0.\u0275\u0275ngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule });\nHammerModule.\u0275inj = i0.\u0275\u0275ngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, providers: [\n        {\n            provide: EVENT_MANAGER_PLUGINS,\n            useClass: HammerGesturesPlugin,\n            multi: true,\n            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, \u0275Console, [new Optional(), HAMMER_LOADER]]\n        },\n        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    ] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, \u0275Console, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.\u0275\u0275FactoryTarget.Injectable });\nDomSanitizer.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                return \u0275_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                return \u0275_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (\u0275allowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return \u0275unwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return \u0275bypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return \u0275bypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return \u0275bypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return \u0275bypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return \u0275bypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.\u0275fac = i0.\u0275\u0275ngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.\u0275\u0275FactoryTarget.Injectable });\nDomSanitizerImpl.\u0275prov = i0.\u0275\u0275ngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] });\ni0.\u0275\u0275ngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.3.0\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('14.3.0');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideProtractorTestingSupport, BrowserDomAdapter as \u0275BrowserDomAdapter, BrowserGetTestability as \u0275BrowserGetTestability, DomEventsPlugin as \u0275DomEventsPlugin, DomRendererFactory2 as \u0275DomRendererFactory2, DomSanitizerImpl as \u0275DomSanitizerImpl, DomSharedStylesHost as \u0275DomSharedStylesHost, HammerGesturesPlugin as \u0275HammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as \u0275INTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as \u0275KeyEventsPlugin, NAMESPACE_URIS as \u0275NAMESPACE_URIS, SharedStylesHost as \u0275SharedStylesHost, TRANSITION_ID as \u0275TRANSITION_ID, escapeHtml as \u0275escapeHtml, flattenStyles as \u0275flattenStyles, initDomAdapter as \u0275initDomAdapter, shimContentAttribute as \u0275shimContentAttribute, shimHostAttribute as \u0275shimHostAttribute };\n//# sourceMappingURL=platform-browser.mjs.map\n"],
  "mappings": "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",
  "names": ["import_common", "document", "plugin", "elem", "console"]
}
